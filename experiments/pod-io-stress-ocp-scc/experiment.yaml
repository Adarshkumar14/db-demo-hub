apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  name: pod-io-stress-ocp-scc
  namespace: harness
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: harness
  entrypoint: pod-io-stress-ocp-scc
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: pod-io-stress-ocp-scc
    outputs: {}
    steps:
    - - arguments: {}
        name: pod-io-stress-j56
        template: pod-io-stress-j56
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: docker.io/harness/chaos-go-runner:1.39.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-io-stress-j56.yaml
      - -saveName=/tmp/engine-name
      command:
      - ./chaos-checker
      image: docker.io/harness/chaos-go-runner:1.39.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-io-stress-j56
        path: /tmp/chaosengine-pod-io-stress-j56.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              annotations:
                probeRef: '[{"mode":"EOT","probeID":"google-ping"}]'
              creationTimestamp: null
              generateName: pod-io-stress-j56
              labels:
                app.kubernetes.io/component: experiment-job
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/runtime-api-usage: "true"
                app.kubernetes.io/version: ci
                name: pod-io-stress
                workflow_name: pod-io-stress-ocp-scc
                workflow_run_id: "{{ workflow.uid }}"
              namespace: "{{workflow.parameters.adminModeNamespace}}"
            spec:
              appinfo:
                applabel: app=mysql
                appns: harness
              chaosServiceAccount: litmus-admin
              components:
                runner:
                  resources: {}
              engineState: active
              experiments:
                - args:
                    - -c
                    - ./experiments -name pod-io-stress
                  command:
                    - /bin/bash
                  image: docker.io/harness/chaos-go-runner:1.39.0
                  imagePullPolicy: Always
                  name: pod-io-stress
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "90"
                        - name: FILESYSTEM_UTILIZATION_PERCENTAGE
                          value: "90"
                        - name: NUMBER_OF_WORKERS
                          value: "4"
                        - name: VOLUME_MOUNT_PATH
                          value: /var/lib/mysql
                        - name: LIB_IMAGE
                          value: docker.io/harness/chaos-go-runner:1.39.0
                        - name: DEFAULT_HEALTH_CHECK
                          value: "false"
                        - name: CONTAINER_RUNTIME
                          value: crio
                        - name: SOCKET_PATH
                          value: /var/run/crio/crio.sock
                        - name: SEQUENCE
                          value: parallel
                      resources: {}
                      securityContext:
                        containerSecurityContext: {}
                        podSecurityContext: {}
                      statusCheckTimeouts: {}
                    probe:
                      - cmdProbe/inputs:
                          command: ./healthcheck -name pod-level
                          comparator:
                            criteria: contains
                            type: string
                            value: "[P000]"
                          source:
                            image: docker.io/harness/chaos-go-runner:1.39.0
                            inheritInputs: true
                        mode: Edge
                        name: healthcheck
                        runProperties:
                          interval: 1s
                          probeTimeout: 180s
                        type: cmdProbe
                    rank: 0
              jobCleanUpPolicy: delete
              terminationGracePeriodSeconds: 30
            status:
              engineStatus: ""
              experiments: null
    metadata:
      labels:
        weight: "10"
    name: pod-io-stress-j56
    outputs: {}
status:
  finishedAt: null
  startedAt: null
